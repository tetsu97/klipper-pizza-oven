[gcode_macro TEMP_RAMP]
gcode:
    # Get the target temperature (default 0) °C
    {% set target_temp = params.TEMP|default(0)|float %}
    # Get the ramp duration (default 0) min
    {% set duration = params.DURATION|default(0)|float %} 
    # Get the ramp max speed (default 2) °C/min
    {% set speed = params.SPEED|default(2) %}

    # Get the current oven temperature
    {% set current_temp = printer['heater_generic pizza_oven'].temperature %}
    # Determine the starting temperature (heater.target if set, otherwise current)
    {% set start_temp = printer['heater_generic pizza_oven'].target if printer['heater_generic pizza_oven'].target !=0 else current_temp %}
    # If the target temperature is already set, just wait for the duration
    {% if target_temp == printer['heater_generic pizza_oven'].target %}
        G4 P{1000 * duration * 60}
    {% else %}
        # Calculate temperature difference
        {% set dt = target_temp - start_temp %}
        # Number of steps for the ramp (about 1°C per step)
        {% set duration = [dt|abs / speed, duration]|max %}
        {% set steps = (duration* 60)|int  %}
        # Adjust temperature increment per step 
        {% set step_temp= dt / steps %}
        # Calculate ramp rate (steps per second, limited by speed) 1E-5 to avoid div/0
        {% set ramp = steps|float / duration %}
        # Loop through each step, set temperature, and wait
        {% for t in range(steps + 1) %}
            SET_HEATER_TEMPERATURE HEATER=pizza_oven TARGET={start_temp + t * step_temp }
            G4 P{1000 / ramp}
        {% endfor %}
    {% endif %}